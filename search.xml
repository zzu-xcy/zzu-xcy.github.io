<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python报错mysqlclient 1.3.13 or newer is required; you have 0.9.3.]]></title>
    <url>%2F2019%2F11%2F28%2Fpython%E6%8A%A5%E9%94%99mysqlclient-1-3-13-or-newer-is-required-you-have-0-9-3%2F</url>
    <content type="text"></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python如何选择mysql驱动]]></title>
    <url>%2F2019%2F11%2F28%2Fpython%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9mysql%E9%A9%B1%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[目前可供选择的驱动大概有三种：mysqlclinent，python-mysql，pymysql。 1.mysqlclient:-优点:python2,3都能直接使用。 -致命缺点：对mysql的安装有要求，必须指定位置存在配置文件。 2.python-mysql:-python2支持很好、python3不支持。 3.pymysql（推荐）：-python2,3都支持并且他还可以伪装成前面的库。 -找到项目文件下的init.py，在里面输入以下内容即可使用： 12import pymysqlpymysql.install_as_MySQLdb() 如果你是python3x，django2.x.x，在使用中需要修改一些配置文件，请参考《报错mysqlclient 1.3.13 or newer is required; you have 0.9.3.解决方法》]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pytest]]></title>
    <url>%2F2019%2F09%2F18%2Fpyest%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>pytest</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python写入excel]]></title>
    <url>%2F2019%2F08%2F19%2Fpython%E5%86%99%E5%85%A5excel%2F</url>
    <content type="text"><![CDATA[在这里介绍两种写入excel的方法：xlwt和xlsxwriter 。 区别：xlwt：只能写入xls格式的excel，并且写入同一个文件会循环覆盖；而xlsxwriter支持写入xls和xlsx格式。 xlwt12345678910import xlwtworkbook = xlwt.Workbook(encoding = 'utf-8') # 创建一个workbook 设置编码worksheet = workbook.add_sheet('sheet1') # 创建一个名为'sheet1'的工作表worksheet.write(0,0, label = 'ok') # 在第一行第一列写入okworkbook.save('test.xls') # 保存 xlsxwriter12345678910import xlsxwriterworkbook = xlsxwriter.Workbook('test.xlsx') #创建一个名为“test”的excel文件worksheet = workbook.add_worksheet() #创建一个工作表对象worksheet.write(0,0,'ok') #在第一行第一列写入okworkbook.close() #关闭excel]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python读取excel]]></title>
    <url>%2F2019%2F08%2F15%2Fpython%E8%AF%BB%E5%8F%96excel%2F</url>
    <content type="text"><![CDATA[Python读Excel—xlrd打开cmd命令行窗口，输入pip install xlrd，小编之前安装成功，如下图所示。 下面开始写代码：下面列出了读取excel可能用到的功能，请根据需要自行选取。 123456789101112131415161718import xlrdpath = 'test.xlsx' # 设置excel存放的路径，我把excel放到了和代码同级目录下data = xlrd.open_workbook(path) # 打开excel文件data.sheet_names() # 获取xlsx文件中所有sheet的名称table = data.sheet_by_index(0) # 通过索引获取xlsx文件第0个sheettable = data.sheet_by_name(u'Sheet1') #通过名称获取table.row_values(i) #获取整行的值table.col_values(i) #获取整列的值nrows = table.nrows # 获取工作表总行数ncols = table.ncols # 获取工作表总列数cell_A1 = table.cell(i, 0).value # 获取第i行第一列的值cell_B1 = table.cell(i, 1).value # 获取第i行第二列的值]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[安装selenium]]></title>
    <url>%2F2019%2F08%2F13%2F%E5%AE%89%E8%A3%85selenium%2F</url>
    <content type="text"><![CDATA[1.安装python如果你已经安装过python，请直接看第二步。 打开 Python官网，找到“Downloads”, 选择自己的平台（Windows/Mac）,一般的Linux平台已经自带的Python，所以不需要安装。如果你是第一次使用python，推荐安装python3.x。 安装过程中记得勾选“Add Python 3.x to PATH”，安装完成后“win+R”输入cmd，在命令行里输入python，看到版本号说明安装成功。]]></content>
      <categories>
        <category>selenium</category>
      </categories>
  </entry>
</search>
